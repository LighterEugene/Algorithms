import java.util.Stack;

public class BracketValidator {
    public static boolean isValid(String sequence) {
        // Используем стек для проверки правильности последовательности скобок
        Stack<Character> stack = new Stack<>();

        // Проходим по каждому символу в строке
        for (char c : sequence.toCharArray()) {
            // Если это открывающая скобка, кладем ее в стек
            if (c == '(' || c == '{' || c == '[') {
                stack.push(c);
            }
            // Если это закрывающая скобка
            else if (c == ')' || c == '}' || c == ']') {
                // Проверяем, если стек пуст или скобка не соответствует вершине стека
                if (stack.isEmpty()) {
                    return false; // Нет соответствующей открывающей скобки
                }
                char top = stack.pop();
                if ((c == ')' && top != '(') ||
                        (c == '}' && top != '{') ||
                        (c == ']' && top != '[')) {
                    return false; // Несоответствующая пара скобок
                }
            }
        }

        // Если после всех проверок стек пуст, значит последовательность правильная
        return stack.isEmpty();
    }

    public static void main(String[] args) {
        // Примеры использования
        System.out.println(isValid("[{}]"));   // true - правильная последовательность
        System.out.println(isValid("([)]"));   // false - неправильная последовательность
        System.out.println(isValid("{()}[]")); // true - правильная последовательность
    }
}
//Последовательности, содержащие круглые скобки (), квадратные скобки [], и фигурные скобки {}, можно проверять на правильность с использованием стека.
// Правильная последовательность — это когда каждая открывающая скобка
// имеет соответствующую закрывающую скобку в правильном порядке. То есть если ( то и закрывающая должна быть на зеркальной позиции )
//Например {[()]} или (){[]}; Положение обратных скобок должно быть зеркальным относительно открывающих.
//
//Как работает стек:
//Мы идём по последовательности символов.
//Когда встречаем открывающую скобку ((, {, [), мы кладём её в стек.
//Когда встречаем закрывающую скобку (), }, ]):
//Мы проверяем вершину стека. Если на вершине находится соответствующая открывающая скобка, мы её убираем (выталкиваем) из стека.
//Если стек пуст, либо закрывающая скобка не соответствует открывающей, последовательность неправильная.
//Если после обработки всей строки стек пуст — последовательность правильная.